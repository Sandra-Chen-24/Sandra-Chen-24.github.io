<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Sandra Chen Blog</title><link>https://sandra-chen-24.github.io/blog/</link><description>Recent content in Blogs on Sandra Chen Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><lastBuildDate>Tue, 16 Sep 2025 15:30:00 +0800</lastBuildDate><atom:link href="https://sandra-chen-24.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>權限相關</title><link>https://sandra-chen-24.github.io/blog/gcp/service-agents/</link><pubDate>Tue, 16 Sep 2025 15:30:00 +0800</pubDate><guid>https://sandra-chen-24.github.io/blog/gcp/service-agents/</guid><description>&lt;p>&lt;a class="link" href="https://cloud.google.com/iam/docs/service-agents" target="_blank" rel="noopener"
>service-agents&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># 由 Google 自動建立的 Google-managed service accounts，不會出現在「IAM → Service Accounts」清單中
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>例如：
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logging → service-PROJECT_NUMBER@gcp-sa-logging.iam.gserviceaccount.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Monitoring → service-PROJECT_NUMBER@gcp-sa-monitoring.iam.gserviceaccount.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Pub/Sub → service-PROJECT_NUMBER@gcp-sa-pubsub.iam.gserviceaccount.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># 查詢角色設定
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gcloud projects get-iam-policy PROJECT_ID \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --flatten=&amp;#34;bindings[].members&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --format=&amp;#34;table(bindings.role, bindings.members)&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter=&amp;#34;bindings.members:service-${PROJECT_NUMBER}@gcp-sa-logging.iam.gserviceaccount.com&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>還沒想到分類</title><link>https://sandra-chen-24.github.io/blog/common/map/</link><pubDate>Tue, 16 Sep 2025 15:30:00 +0800</pubDate><guid>https://sandra-chen-24.github.io/blog/common/map/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># $http_referer 去匹配正則規則 &amp;#34;~^https://(?&amp;lt;domain&amp;gt;[^/]+)&amp;#34;，取出 https:// 後面第一段不含 / 的字串存進 $domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>map $http_referer $effective_host {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default $host;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;~^https://(?&amp;lt;domain&amp;gt;[^/]+)&amp;#34; $domain;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>可觀測性</title><link>https://sandra-chen-24.github.io/blog/otel/otel-collector/</link><pubDate>Wed, 10 Sep 2025 13:30:00 +0800</pubDate><guid>https://sandra-chen-24.github.io/blog/otel/otel-collector/</guid><description>&lt;h2 id="opentelemetry-collector">OpenTelemetry Collector
&lt;/h2>&lt;h3 id="apps-用途說明">apps 用途說明
&lt;/h3>&lt;ul>
&lt;li>collector (deployment): 接收 OpenTelemetry SDK 所送出的資料 (需要在程式使用 otel libery，傳送 log、metric、trace，目前規劃主要針對 trace)&lt;/li>
&lt;li>otel-agent (daemonset): 負責採集節點上面的 log &amp;amp; metric (採集服務資訊)&lt;/li>
&lt;li>otel-cluster-agent (deployment): 負責採集叢集 metric (只需要一顆，採集系統資訊，用 daemonset 可能重複送)&lt;/li>
&lt;li>otel-gateway (deployment): 匯總叢集內的 otel-agent 與 otel-cluster-agent 資料並送到儲存後端 (評估可有可無，若有統一處理的動作才有效益 [e.g. 統一加 tag])&lt;/li>
&lt;/ul>
&lt;h4 id="otelcol-gateway--agent">Otelcol Gateway &amp;amp; Agent
&lt;/h4>&lt;ul>
&lt;li>Otelcol Gateway：收集所有專案的 otel 資料傳送至 eck&lt;/li>
&lt;li>Otelcol Agent：每個 gcp 專案會建立一個，收集專案中服務的 otel 資料傳送至 Otelcol Gateway&lt;/li>
&lt;li>想使用 otel 的服務，需要調整程式，然後加上 env:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>extraEnvs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: OTEL_SERVICE_NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value: odin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: OTEL_RESOURCE_ATTRIBUTES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value: &amp;gt;-
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> env=dev,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dept=pdbm,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> product=bbin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: OTEL_EXPORTER_OTLP_PROTOCOL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value: grpc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: OTEL_EXPORTER_OTLP_ENDPOINT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value: http://collector.opentelemetry:4317
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="otelcol-配置">Otelcol 配置
&lt;/h4>&lt;p>&lt;a class="link" href="https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-collector/values.yaml" target="_blank" rel="noopener"
>參考 chart&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/receivercreator" target="_blank" rel="noopener"
>receiver - receivercreator&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/extension/observer/k8sobserver" target="_blank" rel="noopener"
>extension - k8s_observer&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://opentelemetry.io/docs/platforms/kubernetes/collector/components/" target="_blank" rel="noopener"
>Important Components for Kubernetes&lt;/a>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>chart 設置注意&lt;/p>
&lt;ul>
&lt;li>
&lt;p>因為有使用 datadog agent 會衝到 port，要記得調整設定&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>config:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otlp: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otlp: { enabled: false }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otlp-http: { enabled: false }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>collector-agent、collector-cluster-agent 要加 presets 區塊設定&lt;/p>
&lt;/li>
&lt;li>
&lt;p>pipeline 設置可以先 plan 看 config 中有哪些 receivers、processors、exporters、extensions、connectors，再調整，不需要的也可以蓋掉&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>receivers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jaeger: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zipkin: null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>README.md 中資訊&lt;/p>
&lt;ul>
&lt;li>Status
&lt;ul>
&lt;li>Stability -&amp;gt; 看屬於哪個類型使用 [log, traces, traces]&lt;/li>
&lt;li>Distributions -&amp;gt; 判斷是否已啟用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>collector = receivers + processors + exporters&lt;/p>
&lt;ul>
&lt;li>receivers: 從外部系統收資料（metrics / logs / traces）&lt;/li>
&lt;li>processors: 在 pipeline 中對資料做處理（e.g. 篩選、轉換、打標籤、聚合）&lt;/li>
&lt;li>exporters: 把資料送到外部目的地（e.g. Datadog、OTLP、S3）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>extensions：擴充 collector 的功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>connectors：擴充 pipeline 的功能 [中繼處理或橋接的元件]&lt;/p>
&lt;ul>
&lt;li>
&lt;p>datadog/connector: 把資料轉給 Datadog。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>forward/datadog: 單純做轉發&lt;/p>
&lt;/li>
&lt;li>
&lt;p>內部 exporter + receiver&lt;/p>
&lt;ul>
&lt;li>讓資料從一個 pipeline 流向另一個 pipeline&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>pipelines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Logs pipelines -&amp;gt; 服務透過 otel 傳送到 collector，collector 再傳到 datadog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, k8sattributes, resource, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [forward/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logs/datadog:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [forward/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, batch/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [datadog]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>做 failover / forward&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>pipelines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> traces:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, k8sattributes, resource, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [failover/traces, datadog/connector]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> traces/nop:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [failover/traces]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [nop]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>${env:MY_POD_IP} -&amp;gt; otelcol 底層有處理，才能這樣設定取 env 的值&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># exporters、processors、receivers [定義]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>## helmfile/common/otel-collector -&amp;gt; Otelcol Agent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>## helmfile/pd/observability/apps/otel-collector -&amp;gt; Otelcol Gateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> datadog:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> api:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metrics:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resource_attributes_as_tags: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otlp/elastic-apm: --&amp;gt; eck 服務
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> balancer_name: round_robin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint: dns:///eck-apm-server-apm-http:8200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> health_check:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint: ${env:MY_POD_IP}:13133
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: -&amp;gt; 效能優化及資料處理
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> batch: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> batch/datadog:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # See https://docs.datadoghq.com/opentelemetry/setup/collector_exporter/#batch-processor-configuration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_batch_max_size: 100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_batch_size: 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timeout: 10s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memory_limiter:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> check_interval: 5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> limit_percentage: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spike_limit_percentage: 25
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k8sattributes: {} -&amp;gt; 可以設定使用 k8s 上的 tag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resource: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> transform/elastic-apm:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error_mode: ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log_statements: &amp;amp;statements
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - conditions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - resource.attributes[&amp;#34;product&amp;#34;] != nil and resource.attributes[&amp;#34;env&amp;#34;] != nil
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - set(resource.attributes[&amp;#34;deployment.environment.name&amp;#34;], Concat([resource.attributes[&amp;#34;product&amp;#34;], resource.attributes[&amp;#34;env&amp;#34;]], &amp;#34; &amp;#34;))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otlp:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocols:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> grpc:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint: ${env:MY_POD_IP}:4317
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint: ${env:MY_POD_IP}:4318
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otelarrow: -&amp;gt; gateway 使用，會壓縮
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocols:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> grpc:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint: ${env:MY_POD_IP}:4319
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prometheus:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># pipeline [使用]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># common/otel-collector -&amp;gt; Otelcol Agent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions: [zpages, health_check] -&amp;gt; zpages 可以看 collector 設定
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pipelines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Logs pipelines -&amp;gt; 服務透過 otel 傳送到 collector，collector 再傳到 datadog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, k8sattributes, resource, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [forward/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Metrics pipelines -&amp;gt; 服務透過 otel / prometheus 傳送到 collector，collector 再傳到 datadog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metrics:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp, prometheus]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, k8sattributes, resource, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [forward/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Traces pipelines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> traces:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, k8sattributes, resource, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [failover/traces, datadog/connector]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> traces/main:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [failover/traces]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, filter/traces, probabilistic_sampler, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [otelarrow/gateway]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> traces/nop:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [failover/traces]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [nop] -&amp;gt; failover 把資料丟掉，防止累積大量資料把 collector 用爆
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Datadog pipelines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logs/datadog:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [forward/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, batch/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metrics/datadog:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [forward/datadog, datadog/connector]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, batch/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># helmfile/pd/observability/apps/otel-collector -&amp;gt; Otelcol Gateway
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extensions: [health_check]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pipelines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Telemetry pipelines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metrics/telemetry:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [prometheus]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, k8sattributes, resource]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [forward/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Datadog pipelines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metrics/datadog:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [forward/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, batch/datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [datadog]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Gateway pipelines -&amp;gt; 服務透過 otel / otelarrow 傳送到 collector，collector 再傳到 eck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp, otelarrow]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, transform/elastic-apm, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [otlp/elastic-apm]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metrics:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp, otelarrow]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, transform/elastic-apm, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [otlp/elastic-apm]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> traces:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receivers: [otlp, otelarrow]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processors: [memory_limiter, transform/elastic-apm, batch]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exporters: [otlp/elastic-apm]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="collector-agent-vs-collector-cluster-agent">collector-agent vs collector-cluster-agent
&lt;/h4>&lt;h5 id="metric-相關">metric 相關
&lt;/h5>&lt;ul>
&lt;li>
&lt;p>scope:判斷 metric 是從哪個套件來的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>collector-agent&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>(37) 服務指標
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (13) k8s.pod.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (13) k8s.node.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (11) container.*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>collector-cluster-agent&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>(33) 服務指標
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (4) k8s.statefulset.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - k8s.resource_quota.used
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - k8s.resource_quota.hard_limit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (2) k8s.replicaset.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - k8s.pod.phase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - k8s.node.condition_ready
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - k8s.namespace.phase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (5) k8s.job.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (4) k8s.hpa.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (2) k8s.deployment.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (4) k8s.daemonset.*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - k8s.cronjob.active_jobs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - (6) k8s.container.*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h5 id="log-相關">log 相關
&lt;/h5>&lt;ul>
&lt;li>collector-agent: 服務訪問 log&lt;/li>
&lt;li>collector-cluster-agent: event 相關 log (e.g. 服務被建立、job 執行)&lt;/li>
&lt;/ul></description></item><item><title>機器類型</title><link>https://sandra-chen-24.github.io/blog/aws/instance/</link><pubDate>Tue, 09 Sep 2025 15:30:00 +0800</pubDate><guid>https://sandra-chen-24.github.io/blog/aws/instance/</guid><description>&lt;p>&lt;a class="link" href="https://instances.vantage.sh/" target="_blank" rel="noopener"
>機器類型及費用&lt;/a>&lt;/p>
&lt;h2 id="機器類型">機器類型
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>n:AMD (x86_64)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>g:AWS Graviton (arm64)：image 需要支援 arm 且調整設定
-&amp;gt; ami_type：要使用 AL2023_ARM_64_STANDARD，預設是 AL2023_x86_64_STANDARD&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>gitlab-runners-arm = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance_types = [&amp;#34;m6g.medium&amp;#34;]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> min_size = 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> max_size = 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> desired_size = 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> capacity_type = &amp;#34;SPOT&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ami_type = &amp;#34;AL2023_ARM_64_STANDARD&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34; = &amp;#34;gitlab-runner-arm&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>-&amp;gt; gitlab-runner 需要多帶 helper_image = &amp;ldquo;gitlab/gitlab-runner-helper:arm64-latest&amp;rdquo;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>config: |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [[runners]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [runners.kubernetes]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> namespace = &amp;#34;gitlab&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image = &amp;#34;ubuntu:20.04&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helper_image = &amp;#34;gitlab/gitlab-runner-helper:arm64-latest&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> privileged = true
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>-&amp;gt; CICD 裡面，如果在 build 時，有用到以下指令來安裝 kubectl，需要確認是否是改為 arm64&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>curl -LO &amp;#34;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl&amp;#34; &amp;amp;&amp;amp; chmod +x ./kubectl &amp;amp;&amp;amp; mv ./kubectl /usr/local/bin/kubectl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>其他 ：Intel (x86_64)&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Startup Go Test</title><link>https://sandra-chen-24.github.io/blog/golang/test-startup/</link><pubDate>Wed, 03 Sep 2025 10:54:57 +0800</pubDate><guid>https://sandra-chen-24.github.io/blog/golang/test-startup/</guid><description>&lt;h2 id="前置作業">前置作業
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># 安裝套件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ go get github.com/stretchr/testify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ go mod tidy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>📌 檔案命名使用 func 名稱『大駝峰』改為『蛇型命名』(e.g. UpdateConfigmap -&amp;gt; update_configmap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># Example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>func (suite *ExampleTestSuite) SetupTest() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> suite.VariableThatShouldStartAtFive = 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// All methods that begin with &amp;#34;Test&amp;#34; are run as tests within a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// suite.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>func (suite *ExampleTestSuite) TestExample() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assert.Equal(suite.T(), 5, suite.VariableThatShouldStartAtFive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> suite.Equal(5, suite.VariableThatShouldStartAtFive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// In order for &amp;#39;go test&amp;#39; to run this suite, we need to create
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>// a normal test function and pass our suite to suite.Run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>func TestExampleTestSuite(t *testing.T) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> suite.Run(t, new(ExampleTestSuite))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>My First Post</title><link>https://sandra-chen-24.github.io/blog/golang/my-first-post/</link><pubDate>Wed, 27 Aug 2025 11:37:57 +0800</pubDate><guid>https://sandra-chen-24.github.io/blog/golang/my-first-post/</guid><description>&lt;p>這是我的第一篇 Hugo 文章！&lt;/p>
&lt;h2 id="小節">小節
&lt;/h2>&lt;ul>
&lt;li>支援 Markdown 語法&lt;/li>
&lt;li>可以用 shortcode 插入圖片或程式碼&lt;/li>
&lt;/ul>
&lt;p>err = os.MkdirAll(dirPath, os.ModePerm)
os.ModePerm -&amp;gt; 0777 代表 所有人都可讀寫執行，這對安全性風險很大
0750：Owner 可讀寫執行，Group 可讀執行，其他人無法存取（符合 gosec 要求）。
如果完全不需要 Group 存取，可以用 0700（Owner 全權，其他人完全禁止)&lt;/p>
&lt;p>&lt;a class="link" href="https://tour.go-zh.org/welcome/1" target="_blank" rel="noopener"
>Go 指南&lt;/a>&lt;/p>
&lt;h2 id="入門教材httpstourgo-zhorgwelcome1">&lt;a class="link" href="https://tour.go-zh.org/welcome/1" target="_blank" rel="noopener"
>入門教材&lt;/a>
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span># fmt.Printf(&amp;#34;現在你有了 %g 個問題。\n&amp;#34;, math.Sqrt(7))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>🔢 整數類
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %b：二進位表示法
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %c：Unicode 字元（對應整數的 Unicode code point）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %d：十進位整數
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %o：八進位整數
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %q：單引號括起來的字元常數，必要時會做跳脫
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %x：十六進位（小寫 a-f）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %X：十六進位（大寫 A-F）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %U：Unicode 格式 U+1234
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>🔤 字串與切片
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %s：字串本身
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %q：雙引號括起來的字串，必要時會做跳脫
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %x：字串或 []byte 轉十六進位（小寫）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %X：字串或 []byte 轉十六進位（大寫，字母 A-F）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>🔬 浮點數與複數
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %b：科學記號，以二進位表示浮點數（指數部分是二的冪）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %e：科學記號（小寫 e，如 -1.234000e+06）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %E：科學記號（大寫 E，如 -1.234000E+06）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %f：小數點表示法（不含指數，如 123.456000）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %F：等同於 %f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %g：自動選擇 %e 或 %f（保證最簡潔的輸出）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %G：自動選擇 %E 或 %F
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>📦 通用類
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %v：值的預設格式
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %+v：值的預設格式，並輸出 struct 的欄位名
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %#v：Go 語法表示法（能直接貼回程式）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %T：值的型別
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %%：字面上的百分號
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>## 範例
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type User struct {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name string
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Age int
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>u := User{&amp;#34;Alice&amp;#34;, 30}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fmt.Printf(&amp;#34;%v\n&amp;#34;, u) // {Alice 30}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fmt.Printf(&amp;#34;%+v\n&amp;#34;, u) // {Name:Alice Age:30}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fmt.Printf(&amp;#34;%#v\n&amp;#34;, u) // main.User{Name:&amp;#34;Alice&amp;#34;, Age:30}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fmt.Printf(&amp;#34;%T\n&amp;#34;, u) // main.User
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">短变量声明
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">在函数中，短赋值语句 := 可在隐式确定类型的 var 声明中使用。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">函数外的每个语句都 必须 以关键字开始（var、func 等），因此 := 结构不能在函数外使用。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">**/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> = &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">k&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>, &lt;span style="color:#a6e22e">python&lt;/span>, &lt;span style="color:#a6e22e">java&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;no!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>, &lt;span style="color:#a6e22e">k&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>, &lt;span style="color:#a6e22e">python&lt;/span>, &lt;span style="color:#a6e22e">java&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="switch">switch
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 由上而下判斷，有符合條件則退出
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 無條件的 switch 跟 switch true 一樣
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="defer">defer
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 後進先出
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pointer">pointer
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Go 沒有指針運算
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 指針保存內存地址 [*T 是指向 T 類型的指針]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">42&lt;/span>, &lt;span style="color:#ae81ff">2701&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">i&lt;/span>) &lt;span style="color:#75715e">// [0xc0000a0040]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">j&lt;/span>) &lt;span style="color:#75715e">// [0xc000010078]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#75715e">// 指向 i
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">p&lt;/span>) &lt;span style="color:#75715e">// [0xc0000a0040]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>) &lt;span style="color:#75715e">// [0xc0000a2040]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>) &lt;span style="color:#75715e">// 通过指针读取 i 的值 [42]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span> = &lt;span style="color:#ae81ff">21&lt;/span> &lt;span style="color:#75715e">// 通过指针设置 i 的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>) &lt;span style="color:#75715e">// 查看 i 的值 [21]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span> = &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#75715e">// 指向 j
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">p&lt;/span>) &lt;span style="color:#75715e">// [0xc000010078]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span> = &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">37&lt;/span> &lt;span style="color:#75715e">// 通过指针对 j 进行除法运算
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">j&lt;/span>) &lt;span style="color:#75715e">// 查看 j 的值 [73]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 結構體指針
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Vertex&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">X&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Y&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Vertex&lt;/span>{&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">v&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>).&lt;span style="color:#a6e22e">X&lt;/span> = &lt;span style="color:#ae81ff">1e9&lt;/span> &lt;span style="color:#75715e">// 等同於 p.X
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">v&lt;/span>) &lt;span style="color:#75715e">// [1000000000,2]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="slice">slice
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">primes&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#ae81ff">6&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">7&lt;/span>, &lt;span style="color:#ae81ff">11&lt;/span>, &lt;span style="color:#ae81ff">13&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span> = &lt;span style="color:#a6e22e">primes&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>:&lt;span style="color:#ae81ff">4&lt;/span>] &lt;span style="color:#75715e">// [3, 5, 7]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// slice 不儲存數據，只描述數組中的一段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">names&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#ae81ff">4&lt;/span>]&lt;span style="color:#66d9ef">string&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;John&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Paul&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;George&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Ringo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">names&lt;/span>) &lt;span style="color:#75715e">// [John Paul George Ringo]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">names&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>:&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">names&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>:&lt;span style="color:#ae81ff">3&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">a&lt;/span>, &lt;span style="color:#a6e22e">b&lt;/span>) &lt;span style="color:#75715e">// [John Paul] [Paul George]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">b&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>] = &lt;span style="color:#e6db74">&amp;#34;XXX&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">a&lt;/span>, &lt;span style="color:#a6e22e">b&lt;/span>) &lt;span style="color:#75715e">// John XXX] [XXX George]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">names&lt;/span>) &lt;span style="color:#75715e">// [John XXX George Ringo]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// len 與 cap [長度與容量]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">s&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">7&lt;/span>, &lt;span style="color:#ae81ff">11&lt;/span>, &lt;span style="color:#ae81ff">13&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span>) &lt;span style="color:#75715e">// len=6 cap=6 [2 3 5 7 11 13]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 截取切片使其长度为 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span> = &lt;span style="color:#a6e22e">s&lt;/span>[:&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span>) &lt;span style="color:#75715e">// len=0 cap=6 []
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 扩展其长度
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span> = &lt;span style="color:#a6e22e">s&lt;/span>[:&lt;span style="color:#ae81ff">4&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span>) &lt;span style="color:#75715e">// len=4 cap=6 [2 3 5 7]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 舍弃前两个值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span> = &lt;span style="color:#a6e22e">s&lt;/span>[&lt;span style="color:#ae81ff">2&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span>) &lt;span style="color:#75715e">// len=2 cap=4 [5 7]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;len=%d cap=%d %v\n&amp;#34;&lt;/span>, len(&lt;span style="color:#a6e22e">s&lt;/span>), cap(&lt;span style="color:#a6e22e">s&lt;/span>), &lt;span style="color:#a6e22e">s&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 切片的零值是 nil
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span>, len(&lt;span style="color:#a6e22e">s&lt;/span>), cap(&lt;span style="color:#a6e22e">s&lt;/span>)) &lt;span style="color:#75715e">// [] 0 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;nil!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 用 make 建立 slice
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make([]&lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">a&lt;/span>) &lt;span style="color:#75715e">// a len=5 cap=5 [0 0 0 0 0]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make([]&lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>) &lt;span style="color:#75715e">// 第三個参數可以指定容量
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;b&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">b&lt;/span>) &lt;span style="color:#75715e">// b len=0 cap=5 []
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">b&lt;/span>[:&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;c&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>) &lt;span style="color:#75715e">// c len=2 cap=5 [0 0]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>[&lt;span style="color:#ae81ff">2&lt;/span>:&lt;span style="color:#ae81ff">5&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">d&lt;/span>) &lt;span style="color:#75715e">// d len=3 cap=3 [0 0 0]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">printSlice&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#a6e22e">x&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%s len=%d cap=%d %v\n&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">s&lt;/span>, len(&lt;span style="color:#a6e22e">x&lt;/span>), cap(&lt;span style="color:#a6e22e">x&lt;/span>), &lt;span style="color:#a6e22e">x&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="函數">函數
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 函數閉包
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">adder&lt;/span>() &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span>) &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sum&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>) &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sum&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">sum&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pos&lt;/span>, &lt;span style="color:#a6e22e">neg&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">adder&lt;/span>(), &lt;span style="color:#a6e22e">adder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">10&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pos&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">neg&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">i&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// fibonacci 函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// fibonacci 是返回一个「返回一个 int 的函数」的函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">fibonacci&lt;/span>() &lt;span style="color:#66d9ef">func&lt;/span>() &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">f&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">fibonacci&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">10&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">f&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="方法">方法
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 帶特殊接收者參數的函數
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Vertex&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">X&lt;/span>, &lt;span style="color:#a6e22e">Y&lt;/span> &lt;span style="color:#66d9ef">float64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#a6e22e">Vertex&lt;/span>) &lt;span style="color:#a6e22e">Abs&lt;/span>() &lt;span style="color:#66d9ef">float64&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">math&lt;/span>.&lt;span style="color:#a6e22e">Sqrt&lt;/span>(&lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">X&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">X&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">Y&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">Y&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Vertex&lt;/span>) &lt;span style="color:#a6e22e">Scale&lt;/span>(&lt;span style="color:#a6e22e">f&lt;/span> &lt;span style="color:#66d9ef">float64&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">X&lt;/span> = &lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">X&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">f&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">Y&lt;/span> = &lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">Y&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">f&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Vertex&lt;/span>{&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">Scale&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">v&lt;/span>.&lt;span style="color:#a6e22e">Abs&lt;/span>()) &lt;span style="color:#75715e">// 50
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 使用 v *Vertex
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>{&lt;span style="color:#ae81ff">30&lt;/span> &lt;span style="color:#ae81ff">40&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 使用 v Vertex
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>{&lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="泛型">泛型
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// comparable 為由所有可比較類型（布爾，數字，字符串，指針，通道，可比較類型的數組，其字段都是可比較類型的結構）實現的接口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Index 返回 x 在 s 中的下标，未找到则返回 -1。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Ｔ可以改成任意名稱
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">Index&lt;/span>[&lt;span style="color:#a6e22e">T&lt;/span> &lt;span style="color:#a6e22e">comparable&lt;/span>](&lt;span style="color:#a6e22e">s&lt;/span> []&lt;span style="color:#a6e22e">T&lt;/span>, &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#a6e22e">T&lt;/span>) &lt;span style="color:#66d9ef">int&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// v 和 x 的类型为 T，它拥有 comparable 可比较的约束，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 因此我们可以使用 ==。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Index 可以在整数切片上使用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">si&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#ae81ff">15&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">Index&lt;/span>(&lt;span style="color:#a6e22e">si&lt;/span>, &lt;span style="color:#ae81ff">15&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Index 也可以在字符串切片上使用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ss&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">string&lt;/span>{&lt;span style="color:#e6db74">&amp;#34;foo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;bar&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;baz&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">Index&lt;/span>(&lt;span style="color:#a6e22e">ss&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// any
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// List 表示一个可以保存任何类型的值的单链表。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">List&lt;/span>[&lt;span style="color:#a6e22e">T&lt;/span> &lt;span style="color:#a6e22e">any&lt;/span>] &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">next&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">List&lt;/span>[&lt;span style="color:#a6e22e">T&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">val&lt;/span> &lt;span style="color:#a6e22e">T&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">l&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">List&lt;/span>[&lt;span style="color:#a6e22e">T&lt;/span>]) &lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#a6e22e">v&lt;/span> &lt;span style="color:#a6e22e">T&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">curr&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">l&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">curr&lt;/span>.&lt;span style="color:#a6e22e">next&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">curr&lt;/span> = &lt;span style="color:#a6e22e">curr&lt;/span>.&lt;span style="color:#a6e22e">next&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">curr&lt;/span>.&lt;span style="color:#a6e22e">next&lt;/span> = &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">List&lt;/span>[&lt;span style="color:#a6e22e">T&lt;/span>]{&lt;span style="color:#a6e22e">val&lt;/span>: &lt;span style="color:#a6e22e">v&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">l&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">List&lt;/span>[&lt;span style="color:#a6e22e">T&lt;/span>]) &lt;span style="color:#a6e22e">Print&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">curr&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">l&lt;/span>.&lt;span style="color:#a6e22e">next&lt;/span> &lt;span style="color:#75715e">// 跳過頭節點 (dummy head)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">curr&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%v -&amp;gt; &amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">curr&lt;/span>.&lt;span style="color:#a6e22e">val&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">curr&lt;/span> = &lt;span style="color:#a6e22e">curr&lt;/span>.&lt;span style="color:#a6e22e">next&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;nil&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 建立一個 int 的鏈表
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">intList&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">List&lt;/span>[&lt;span style="color:#66d9ef">int&lt;/span>]{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">intList&lt;/span>.&lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">intList&lt;/span>.&lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#ae81ff">20&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">intList&lt;/span>.&lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#ae81ff">30&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;intList: &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">intList&lt;/span>.&lt;span style="color:#a6e22e">Print&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 建立一個 string 的鏈表
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">strList&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">List&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strList&lt;/span>.&lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Go&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strList&lt;/span>.&lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;is&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strList&lt;/span>.&lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;fun&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;strList: &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strList&lt;/span>.&lt;span style="color:#a6e22e">Print&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>